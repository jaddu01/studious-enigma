<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Validator;
use Proengsoft\JsValidation\Facades\JsValidatorFacade;
use DB;
class HomeController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    protected $user;
    public function __construct(User $user)
    {
        parent::__construct();
        $this->middleware('admin.auth');
        $this->user =$user;
    }

    /**
     * Show the application dashboard.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('admin.dashboard');
    }
    public function profile($id=null)
    {
        $validator = JsValidatorFacade::make($this->user->rules('POST'));
        $user = User::findOrFail(Auth::guard('admin')->user()->id);

        return view('admin.profile',compact(['user','validator']));
    }




    /**
     * @param Request $request
     * @param $id
     * @return $this|\Illuminate\Http\RedirectResponse
     */
    public function profileUpdate(Request $request, $id)
    {


        $input = $request->all();
        $validator = Validator::make($request->all(), $this->user->rules('PUT',$id),$this->user->messages("PUT"));

        if ($validator->fails()) {

            return redirect()->back()
                ->withErrors($validator)
                ->withInput();
        }else{
            if($request->has('password')){
                $input['password'] = bcrypt($input['password']);
            }
            $user= $this->user->FindOrFail($id)->fill($input)->save();

            return redirect()->back()->with('success','User update successful');
        }
    }
}
